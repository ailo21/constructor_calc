{"version":3,"sources":["features/calculator/model/CalcPartial.ts","features/calculator/model/Operation.ts","app/hooks.ts","features/calculator/calculatorSlice.ts","asset/icon/icon_image.svg","components/calculator/CalcNumber.tsx","components/calculator/CalcNumbersList.tsx","components/calculator/CalcEqual.tsx","components/calculator/CalcDisplay.tsx","components/calculator/CalcOperation.tsx","components/calculator/CalcOperationList.tsx","components/dragAndDrop/Item.tsx","components/dragAndDrop/Placeholder.tsx","components/dragAndDrop/Column.tsx","components/switcher/ConstructorModEdit.tsx","components/calculator/OpacityPlaceholder.tsx","components/dragAndDrop/ColumnWrap.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx"],"names":["CalcPartialEnum","operationEnum","useAppDispatch","useDispatch","useAppSelector","useSelector","_path","_path2","initialState","isEditMode","displayProp","operand1","undefined","operand2","operation","compute","isComputedResult","structure","arialDisplay","id","list","sort","elementCalc","CalcDisplay","ariaOperation","CalcOperationList","arialNumbers","CalcNumbers","ariaEqual","CalcEqual","calculator","calculatorSlice","createSlice","name","reducers","toggleEditMode","state","deleteFromCalculator","action","payload","push","displayIndex","findIndex","f","splice","changePartials","addOperand1","Number","addOperation","displayClear","addOperand2","computedResult","result","fold","subtract","multiply","division","actions","selectEditMode","selectPartials","selectDisplayOperand1","selectDisplayOperation","selectIsComputedResult","selectDisplay","value","String","toString","CalcNumber","num","onClick","className","CalcNumbersList","dispatch","clickHandlerNum","displayValue","readOnly","type","placeholder","CalcOperation","operationList","map","o","index","Item","text","partial","columns","isPromMode","draggableId","provided","onDoubleClick","part","some","s","ref","innerRef","draggableProps","dragHandleProps","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgIconImage","_ref","svgRef","title","titleId","props","xmlns","height","viewBox","width","fill","d","ForwardRef","Placeholder","Column","col","droppableId","style","display","flexDirection","position","droppableProps","ConstructorModEdit","runtimeClass","constructorClass","join","OpacityPlaceholder","ColumnWrap","onDragEnd","destination","start","end","newStartList","filter","_","idx","newStartCol","newEndList","temp","newEndCol","App","store","configureStore","reducer","calculatorReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4f4fe95f.chunk.js","sourcesContent":["export interface CalcPartial {\r\n    sort: number,\r\n    elementCalc: CalcPartialEnum\r\n}\r\nexport enum CalcPartialEnum {\r\n    CalcNumbers = \"CalcNumbers\",\r\n    CalcDisplay = \"CalcDisplay\",\r\n    CalcEqual = \"CalcEqual\",\r\n    CalcOperationList = \"CalcOperationList\",\r\n}","export enum operationEnum {\r\n    fold = \"+\",\r\n    subtract = \"-\",\r\n    multiply = \"x\",\r\n    division = \"/\",\r\n}\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import {CalcPartial, CalcPartialEnum} from \"./model/CalcPartial\";\r\nimport {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {RootState} from \"../../app/store\";\r\nimport {operationEnum} from \"./model/Operation\";\r\n\r\nexport interface CalcState {\r\n    isEditMode: boolean,\r\n    structure: PartCalc,\r\n    displayProp: displayProp\r\n}\r\n\r\ntype displayProp = {\r\n    operand1: number | undefined,\r\n    operand2: number | undefined,\r\n    operation: operationEnum | undefined,\r\n    compute: number | undefined,\r\n    isComputedResult: boolean\r\n}\r\n\r\nexport interface PartCalc {\r\n    [index: string]: any,\r\n\r\n    arialDisplay: {\r\n        id: 'arialDisplay',\r\n        list: CalcPartial[]\r\n    },\r\n    ariaOperation: {\r\n        id: 'ariaOperation',\r\n        list: CalcPartial[]\r\n    },\r\n    arialNumbers: {\r\n        id: 'arialNumbers',\r\n        list: CalcPartial[]\r\n    },\r\n    ariaEqual: {\r\n        id: 'ariaEqual',\r\n        list: CalcPartial[]\r\n    },\r\n\r\n    calculator: {\r\n        id: 'calculator',\r\n        list: CalcPartial[]\r\n    },\r\n}\r\n\r\nconst initialState: CalcState = {\r\n    isEditMode: true,\r\n    displayProp: <displayProp>{\r\n        operand1: undefined,\r\n        operand2: undefined,\r\n        operation: undefined,\r\n        compute: undefined,\r\n        isComputedResult: false\r\n    },\r\n    structure: {\r\n        arialDisplay: {\r\n            id: 'arialDisplay',\r\n            list: [{sort: 1, elementCalc: CalcPartialEnum.CalcDisplay},]\r\n        },\r\n        ariaOperation: {\r\n            id: 'ariaOperation',\r\n            list: [{sort: 2, elementCalc: CalcPartialEnum.CalcOperationList},]\r\n        },\r\n        arialNumbers: {\r\n            id: 'arialNumbers',\r\n            list: [{sort: 3, elementCalc: CalcPartialEnum.CalcNumbers}]\r\n        },\r\n        ariaEqual: {\r\n            id: 'ariaEqual',\r\n            list: [{sort: 4, elementCalc: CalcPartialEnum.CalcEqual}]\r\n        },\r\n        calculator: {\r\n            id: 'calculator',\r\n            list: []\r\n        },\r\n    }\r\n\r\n}\r\n\r\nexport const calculatorSlice = createSlice({\r\n    name: \"calculator\",\r\n    initialState,\r\n    reducers: {\r\n        toggleEditMode: (state) => {\r\n            state.isEditMode = !state.isEditMode\r\n        },\r\n        deleteFromCalculator: (state, action: PayloadAction<CalcPartial>) => {\r\n\r\n            switch (action.payload.elementCalc) {\r\n                case CalcPartialEnum.CalcDisplay:\r\n                    state.structure.arialDisplay.list.push(action.payload)\r\n                    break;\r\n                case CalcPartialEnum.CalcEqual:\r\n                    state.structure.ariaEqual.list.push(action.payload)\r\n                    break;\r\n                case CalcPartialEnum.CalcNumbers:\r\n                    state.structure.arialNumbers.list.push(action.payload)\r\n                    break;\r\n                case CalcPartialEnum.CalcOperationList:\r\n                    state.structure.ariaOperation.list.push(action.payload)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            const displayIndex = state.structure.calculator.list.findIndex((f: CalcPartial) => f.elementCalc == action.payload.elementCalc);\r\n            state.structure.calculator.list.splice(displayIndex, 1);\r\n\r\n        },\r\n        changePartials: (state, action: PayloadAction<PartCalc>) => {\r\n\r\n            if (action.payload['arialDisplay'] != undefined) {\r\n                state.structure.arialDisplay = action.payload['arialDisplay'];\r\n            }\r\n            if (action.payload['arialNumbers'] != undefined) {\r\n                state.structure.arialNumbers = action.payload['arialNumbers'];\r\n            }\r\n            if (action.payload['ariaEqual'] != undefined) {\r\n                state.structure.ariaEqual = action.payload['ariaEqual'];\r\n            }\r\n            if (action.payload['ariaOperation'] != undefined) {\r\n                state.structure.ariaOperation = action.payload['ariaOperation'];\r\n            }\r\n            if (action.payload['calculator'] != undefined) {\r\n                state.structure.calculator = action.payload['calculator'];\r\n            }\r\n        },\r\n        addOperand1: (state, action: PayloadAction<number>) => {\r\n            state.displayProp.operand1 =\r\n                (state.displayProp.operand1 != undefined) ?\r\n                    Number(state.displayProp.operand1 + '' + action.payload)\r\n                    : action.payload;\r\n        },\r\n        addOperation: (state, action: PayloadAction<operationEnum>) => {\r\n            state.displayProp.operation = action.payload;\r\n        },\r\n        displayClear: (state) => {\r\n            state.displayProp = initialState.displayProp;\r\n        },\r\n        addOperand2: (state, action: PayloadAction<number>) => {\r\n            state.displayProp.operand2 = (state.displayProp.operand2 != undefined) ?\r\n                Number(state.displayProp.operand2 + '' + action.payload)\r\n                : action.payload\r\n        },\r\n        computedResult: (state) => {\r\n            let result: number = 0;\r\n            const operand1 = state.displayProp.operand1!;\r\n            const operand2 = state.displayProp.operand2!;\r\n            switch (state.displayProp.operation) {\r\n                case  operationEnum.fold:\r\n                    result = operand1 + operand2;\r\n                    break;\r\n                case operationEnum.subtract:\r\n                    result = operand1 - operand2;\r\n                    break;\r\n                case operationEnum.multiply:\r\n                    result = operand1 * operand2;\r\n                    break;\r\n                case operationEnum.division:\r\n                    result = operand1 / operand2;\r\n                    break;\r\n            }\r\n            state.displayProp.compute = result;\r\n            state.displayProp.isComputedResult = true\r\n        }\r\n    }\r\n})\r\nexport const {\r\n    toggleEditMode,\r\n    deleteFromCalculator,\r\n    changePartials,\r\n    addOperand1,\r\n    addOperand2,\r\n    addOperation,\r\n    displayClear,\r\n    computedResult\r\n} = calculatorSlice.actions;\r\n\r\nexport const selectEditMode = (state: RootState) => state.calculator.isEditMode;\r\nexport const selectPartials = (state: RootState) => state.calculator.structure;\r\n\r\n//calc\r\nexport const selectDisplayOperand1 = (state: RootState) => state.calculator.displayProp.operand1;\r\nexport const selectDisplayOperand2 = (state: RootState) => state.calculator.displayProp.operand2;\r\nexport const selectDisplayOperation = (state: RootState) => state.calculator.displayProp.operation;\r\nexport const selectIsComputedResult = (state: RootState) => state.calculator.displayProp.isComputedResult;\r\n\r\nexport const selectDisplay = (state: RootState) => {\r\n    let value: string;\r\n    if (state.calculator.displayProp.compute === undefined) {\r\n        value = String(state.calculator.displayProp.operand1 ?? '');\r\n        value += String(state.calculator.displayProp.operation ?? '');\r\n        value += String(state.calculator.displayProp.operand2 ?? '');\r\n    } else {\r\n        value = state.calculator.displayProp.compute.toString();\r\n    }\r\n    return value;\r\n};\r\n\r\nexport default calculatorSlice.reducer;","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIconImage(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    width: \"24px\",\n    fill: \"#000000\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0h24v24H0V0z\",\n    fill: \"none\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-4.86 8.86l-3 3.87L9 13.14 6 17h12l-3.86-5.14z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconImage);\nexport default __webpack_public_path__ + \"static/media/icon_image.d0b22c56.svg\";\nexport { ForwardRef as ReactComponent };","import React, {FC} from 'react';\r\n\r\ninterface Props {\r\n    num: number,\r\n    onClick : (num:number) => void\r\n}\r\n\r\nconst CalcNumber: FC<Props> = ({num,onClick}) => {\r\n    return (\r\n        <button className={'num'} onClick={() => {\r\n            onClick(num)\r\n        }}>\r\n            {num}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default CalcNumber;","import React from 'react';\r\nimport CalcNumber from \"./CalcNumber\";\r\nimport {useAppDispatch, useAppSelector} from \"../../app/hooks\";\r\nimport {\r\n    addOperand1, addOperand2, displayClear,\r\n    selectDisplayOperation, selectIsComputedResult\r\n} from \"../../features/calculator/calculatorSlice\";\r\n\r\nconst CalcNumbersList = () => {\r\n    const dispatch = useAppDispatch();\r\n    const operation = useAppSelector(selectDisplayOperation);\r\n    const computedResult = useAppSelector(selectIsComputedResult);\r\n\r\n    const clickHandlerNum = (num: number) => {\r\n        if(computedResult){\r\n            dispatch(displayClear())\r\n            dispatch(addOperand1(num))\r\n        }\r\n        else{\r\n            if(operation===undefined){\r\n                dispatch(addOperand1(num))\r\n            }\r\n            else{\r\n                dispatch(addOperand2(num))\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div  className={\"calc_partial\"}>\r\n            <div className={'row'}>\r\n                <CalcNumber num={7} onClick={() => clickHandlerNum(7)}/>\r\n                <CalcNumber num={8} onClick={() => clickHandlerNum(8)}/>\r\n                <CalcNumber num={9} onClick={() => clickHandlerNum(9)}/>\r\n            </div>\r\n            <div className={'row'}>\r\n                <CalcNumber num={4} onClick={() => clickHandlerNum(4)}/>\r\n                <CalcNumber num={5} onClick={() => clickHandlerNum(5)}/>\r\n                <CalcNumber num={6} onClick={() => clickHandlerNum(6)}/>\r\n            </div>\r\n            <div className={'row'}>\r\n                <CalcNumber num={1} onClick={() => clickHandlerNum(1)}/>\r\n                <CalcNumber num={2} onClick={() => clickHandlerNum(2)}/>\r\n                <CalcNumber num={3} onClick={() => clickHandlerNum(3)}/>\r\n            </div>\r\n            <div className={'row'}>\r\n                <CalcNumber num={0} onClick={() => clickHandlerNum(0)}/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalcNumbersList;","import React from 'react';\r\nimport {useAppDispatch} from \"../../app/hooks\";\r\nimport {computedResult} from \"../../features/calculator/calculatorSlice\";\r\n\r\nconst CalcEqual = () => {\r\n    const dispatch = useAppDispatch();\r\n    const clickHandlerResult=()=>{\r\n        dispatch(computedResult())\r\n    }\r\n    return (\r\n        <div  className={\"calc_partial\"}>\r\n            <button className={'operation'} onClick={()=>clickHandlerResult()}>\r\n                =\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalcEqual;","import React from 'react';\r\n\r\nimport {useAppSelector} from \"../../app/hooks\";\r\nimport {\r\n    selectDisplay\r\n} from \"../../features/calculator/calculatorSlice\";\r\n\r\nconst CalcDisplay = () => {\r\n    const displayValue = useAppSelector(selectDisplay);\r\n\r\n    return (\r\n        <div className={\"calc_partial calc_partial_display\"}>\r\n            <input readOnly={true} value={displayValue} className={'display'} type={\"text\"} placeholder={'0'}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalcDisplay;","import React, {FC} from 'react';\r\nimport {operationEnum} from \"../../features/calculator/model/Operation\";\r\n\r\ninterface Props {\r\n    operation: operationEnum,\r\n    onClick : (operation:operationEnum) => void\r\n}\r\nconst CalcOperation:FC<Props> = ({operation,onClick}) => {\r\n    return (\r\n        <button\r\n            className={'operation_item'}\r\n            onClick={()=>{\r\n                onClick(operation)\r\n            }}\r\n        >\r\n            {operation}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default CalcOperation;","import React, {FC} from 'react';\r\nimport CalcOperation from \"./CalcOperation\";\r\nimport {operationEnum} from \"../../features/calculator/model/Operation\";\r\nimport {useAppDispatch, useAppSelector} from \"../../app/hooks\";\r\nimport {addOperation, selectDisplayOperand1} from \"../../features/calculator/calculatorSlice\";\r\n\r\nconst CalcOperationList: FC = () => {\r\n    const dispatch = useAppDispatch();\r\n\r\n    const operand1 = useAppSelector(selectDisplayOperand1);\r\n\r\n    const clickHandlerOperation = (operation: operationEnum) => {\r\n        if (operand1 != undefined) {\r\n            dispatch(addOperation(operation))\r\n        }\r\n    }\r\n    const operationList = [\r\n        operationEnum.fold,\r\n        operationEnum.subtract,\r\n        operationEnum.multiply,\r\n        operationEnum.division,\r\n    ];\r\n\r\n    return (\r\n        <div className={\"calc_partial\"}>\r\n            <div className={'row'}>\r\n                {\r\n                    operationList.map((o, index) => <CalcOperation key={index} operation={o}\r\n                                                                   onClick={() => clickHandlerOperation(o)}/>)\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CalcOperationList;","import React, {FC} from 'react';\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport {CalcPartial, CalcPartialEnum} from \"../../features/calculator/model/CalcPartial\";\r\nimport {useAppDispatch, useAppSelector} from \"../../app/hooks\";\r\nimport {\r\n    deleteFromCalculator,\r\n    selectEditMode,\r\n    selectPartials\r\n} from \"../../features/calculator/calculatorSlice\";\r\nimport CalcNumbersList from \"../calculator/CalcNumbersList\";\r\nimport CalcEqual from \"../calculator/CalcEqual\";\r\nimport CalcDisplay from \"../calculator/CalcDisplay\";\r\nimport CalcOperationList from \"../calculator/CalcOperationList\";\r\n\r\ninterface ItemProps {\r\n    text: string,\r\n    index: number,\r\n    partial: CalcPartial\r\n}\r\n\r\nconst Item: FC<ItemProps> = ({text, index, partial}) => {\r\n    const dispatch = useAppDispatch();\r\n    const columns = useAppSelector(selectPartials);\r\n    const isPromMode = useAppSelector(selectEditMode);\r\n\r\n    const removeElement = (part: CalcPartial) => {\r\n        if (!isPromMode) return null;\r\n        //убедимся что двойной клик проищошел по элементу в правой колоне (в калькуляторе)\r\n        if (!columns.calculator.list.some(s => s.elementCalc == part.elementCalc)) return null\r\n\r\n        dispatch(deleteFromCalculator(part));\r\n    }\r\n    return (\r\n        <Draggable draggableId={text} index={index}>\r\n            {provided => (\r\n                <div\r\n\r\n                    onDoubleClick={() => removeElement(partial)}\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                >\r\n\r\n                    {\r\n                        partial.elementCalc === CalcPartialEnum.CalcNumbers && <CalcNumbersList/>\r\n                    }\r\n                    {\r\n                        partial.elementCalc === CalcPartialEnum.CalcDisplay && <CalcDisplay/>\r\n                    }\r\n                    {\r\n                        partial.elementCalc === CalcPartialEnum.CalcEqual && <CalcEqual/>\r\n                    }\r\n                    {\r\n                        partial.elementCalc === CalcPartialEnum.CalcOperationList && <CalcOperationList/>\r\n                    }\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n\r\n    );\r\n};\r\n\r\nexport default Item;","import React from 'react';\r\nimport { ReactComponent as PlaceholderSvg } from '../../asset/icon/icon_image.svg';\r\n\r\nconst Placeholder = () => {\r\n    return (\r\n        <div className={\"placeholder\"}>\r\n            <PlaceholderSvg/>\r\n            <div className={\"placeholder_text\"}>\r\n                <div><span className={\"font_blue\"}>Drag and drop</span></div>\r\n                <div><span className={\"font_small\"}>Drag and drop</span></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Placeholder;","import React, {FC} from 'react';\r\nimport Item from \"./Item\";\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\nimport Placeholder from \"./Placeholder\";\r\nimport {CalcPartial} from \"../../features/calculator/model/CalcPartial\";\r\n\r\ninterface ColumnProps {\r\n    col: {\r\n        id: any\r\n        list?: CalcPartial[]\r\n        item?: CalcPartial\r\n    }\r\n}\r\n\r\nconst Column: FC<ColumnProps> = ({col: {list, id}}) => {\r\n// debugger;\r\n    return (\r\n        <Droppable droppableId={id}>\r\n            {provided => (\r\n\r\n                <div\r\n                    className={\"column column_\" + id}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            flexDirection: 'column',\r\n                            position: 'relative'\r\n                        }}\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                    >\r\n                        {list?.map((partial, index) => (\r\n                            <Item partial={partial} key={partial.sort} text={partial.elementCalc} index={index}/>\r\n                        ))}\r\n\r\n\r\n                        {id == 'calculator' && <Placeholder/>}\r\n\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n\r\n        </Droppable>\r\n    );\r\n};\r\n\r\nexport default Column;","import React from 'react';\r\nimport {useAppDispatch, useAppSelector} from \"../../app/hooks\";\r\nimport {selectEditMode, toggleEditMode} from \"../../features/calculator/calculatorSlice\";\r\nimport { ReactComponent as SeeSvg } from '../../asset/icon/icon_see.svg';\r\nimport { ReactComponent as CodeSvg } from '../../asset/icon/icon_code.svg.svg';\r\nimport '../switcher/switcher.css'\r\n\r\nconst ConstructorModEdit = () => {\r\n    const dispatch = useAppDispatch();\r\n    const isPromMode = useAppSelector(selectEditMode);\r\n    let runtimeClass=['mode','mode_runtime'];\r\n    let constructorClass=['mode','mode_constructor'];\r\n    if(isPromMode){\r\n        runtimeClass.push('active')\r\n    }\r\n    else{\r\n        constructorClass.push('active')\r\n    }\r\n    return (\r\n        <div className={'switcher_wrap'}>\r\n            <div className={'switcher'}>\r\n                <button\r\n                    className={runtimeClass.join(' ')}\r\n                    onClick={() => dispatch(toggleEditMode())}\r\n                >\r\n                    <span>Runtime</span>\r\n                </button>\r\n                <button\r\n                    className={constructorClass.join(' ')}\r\n                    onClick={() => dispatch(toggleEditMode())}\r\n                >\r\n                    <span>Constructor</span>\r\n                </button>\r\n\r\n                <div className={'switcher_border '+(isPromMode?'switcher_border_edit':'switcher_border_calc')}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ConstructorModEdit;","import React from 'react';\r\nimport CalcDisplay from \"./CalcDisplay\";\r\nimport CalcOperationList from \"./CalcOperationList\";\r\nimport CalcNumbersList from \"./CalcNumbersList\";\r\nimport CalcEqual from \"./CalcEqual\";\r\n\r\nconst OpacityPlaceholder = () => {\r\n    return (\r\n        <div className={\"opacity_placeholder\"}>\r\n\r\n            <CalcDisplay/>\r\n            <CalcOperationList/>\r\n            <CalcNumbersList/>\r\n            <CalcEqual/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default OpacityPlaceholder;","import React from 'react';\r\nimport Column from \"./Column\";\r\nimport {DragDropContext, DropResult} from 'react-beautiful-dnd';\r\nimport {useAppDispatch, useAppSelector} from \"../../app/hooks\";\r\nimport {changePartials, PartCalc, selectEditMode, selectPartials} from \"../../features/calculator/calculatorSlice\";\r\nimport ConstructorModEdit from \"../switcher/ConstructorModEdit\";\r\nimport OpacityPlaceholder from \"../calculator/OpacityPlaceholder\";\r\nimport {CalcPartial} from \"../../features/calculator/model/CalcPartial\";\r\n\r\nconst ColumnWrap = () => {\r\n    const dispatch = useAppDispatch();\r\n    const columns = useAppSelector(selectPartials);\r\n    const isEditMode = useAppSelector(selectEditMode);\r\n\r\n    const onDragEnd = ({source, destination}: DropResult) => {\r\n        // Make sure we have a valid destination\r\n        if (destination === undefined || destination === null) return null\r\n\r\n        // Make sure we're actually moving the item\r\n        if (\r\n            source.droppableId === destination.droppableId &&\r\n            destination.index === source.index\r\n        )\r\n            return null\r\n\r\n        if (columns != null) {\r\n\r\n        }\r\n        const start = columns[source.droppableId]\r\n        const end = Object.assign([], columns[destination.droppableId]);\r\n        if (end.id != 'calculator') return null;\r\n\r\n        if (start.id === end.id && end.id=='calculator'){\r\n\r\n        }\r\n        else{\r\n            const newStartList = start.list.filter(\r\n                (_: any, idx: number) => idx !== source.index\r\n            )\r\n\r\n            // Create a new start column\r\n            const newStartCol = {\r\n                id: start.id,\r\n                list: newStartList\r\n            }\r\n\r\n            // Make a new end list array\r\n            const newEndList = Object.assign([], end.list);\r\n\r\n            // Insert the item into the end list\r\n            newEndList.splice(destination.index, 0, start.list[source.index])\r\n\r\n            //обеспечим появление дисплея строго в первой позиции\r\n            if (newEndList.some((s: CalcPartial) => (s.elementCalc == 'CalcDisplay'))) {\r\n                const displayIndex = newEndList.findIndex((f: CalcPartial) => f.elementCalc == 'CalcDisplay');\r\n                let temp = newEndList.splice(displayIndex, 1)\r\n                newEndList.splice(0, 0, temp[0]);\r\n            }\r\n\r\n            // Create a new end column\r\n            const newEndCol = {\r\n                id: end.id,\r\n                list: newEndList\r\n            }\r\n\r\n            // Update the state\r\n            dispatch(changePartials({\r\n                [newStartCol.id]: newStartCol,\r\n                [newEndCol.id]: newEndCol\r\n            } as PartCalc))\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={isEditMode ? \"mode mode__constructor\" : \"mode mode__calculator\"}>\r\n            <ConstructorModEdit/>\r\n            <DragDropContext onDragEnd={onDragEnd}>\r\n                <div\r\n                    className={'drag_columns'}\r\n                >\r\n                    <div className={'constructor_area'}>\r\n                        <OpacityPlaceholder/>\r\n\r\n                        <Column col={columns[\"arialDisplay\"]} key={columns[\"arialDisplay\"].id}/>\r\n                        <Column col={columns[\"ariaOperation\"]} key={columns[\"ariaOperation\"].id}/>\r\n                        <Column col={columns[\"arialNumbers\"]} key={columns[\"arialNumbers\"].id}/>\r\n                        <Column col={columns[\"ariaEqual\"]} key={columns[\"ariaEqual\"].id}/>\r\n                    </div>\r\n                    <div>\r\n                        <Column col={columns[\"calculator\"]} key={columns[\"calculator\"].id}/>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n            </DragDropContext>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default ColumnWrap;","import React from 'react';\nimport './App.css';\nimport ColumnWrap from \"./components/dragAndDrop/ColumnWrap\";\n\nfunction App() {\n  return (\n      <div className={\"wrap\"}>\n          <div className={\"container\"}>\n              <ColumnWrap/>\n\n          </div>\n      </div>\n\n  );\n}\n\nexport default App;\n","import {configureStore, ThunkAction, Action} from '@reduxjs/toolkit';\nimport calculatorReducer from \"../features/calculator/calculatorSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    calculator: calculatorReducer\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}